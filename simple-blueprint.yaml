tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint installs the Node Cellar application
  on hosts with known IP addresses.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml
  - types/nodecellar.yaml
  - types/simple-types.yaml
  - templates/common.yaml

#####################################################################################
# The inputs section allows the user to use same blueprint for creating different
# deployments, each one with its own parameters.
#
# To specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.yaml
#####################################################################################

inputs:

  nodejs_host_ip:
    description: >
      IP address of nodejs_host

  mongod_host_ip:
    description: >
      IP address of mongod_host

  agent_user:
      description: >
        Username for SSH connections to hosts from Cloudify Manager

  agent_private_key_path:
      description: >
        Path to private key used for SSH connections to hosts
        (must be accessible by Cloudify Manager)

  # Application information

  webserver_port:
    description: The external web server port
    default: 8080

node_templates:

  ############
  # Hosts
  ############

  nodejs-host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      ip: { get_input: nodejs_host_ip }
      cloudify_agent:
        user: { get_input: agent_user }
        key: { get_input: agent_private_key_path }

  mongod-host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      ip: { get_input: mongod_host_ip }
      cloudify_agent:
        user: { get_input: agent_user }
        key: { get_input: agent_private_key_path }

###########################################################
# The outputs section exposes the application endpoint.
#
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_property: [ nodejs-host, ip ] }
      port: { get_property: [ nodecellar, port ] }

