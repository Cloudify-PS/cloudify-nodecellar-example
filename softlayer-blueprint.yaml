tosca_definitions_version: cloudify_dsl_1_3

description: >
  This Blueprint installs the nodecellar application
  on a softlayer cloud environment.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/softlayer-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.4/plugin.yaml
  - types/nodecellar.yaml
  - types/softlayer-types.yaml
  - templates/common.yaml

#####################################################################################
# inputs section allows the user to use same
# blueprint for creating different deployments, each one
# with its own parameters.
# to specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.json
#####################################################################################

inputs:

  location:
    description: >
      Location of the data center
      Default value is the location id of Melbourne 1
    default: 449596

  domain:
    description: The domain
    default: cloudify.org

  ram:
    description: >
      Item id of the ram
      Default value is the item id of 16 GB
    default: 1017

  cpu:
    description: >
      Item id of the cpu
      Default value is the item id of 4 x 2.0 GHz Cores
    default: 859

  disk:
    description: >
      Item id of the disk
      Default value is the item id of 25 GB (SAN)
    default: 1178

  os:
    description: >
      Item id of the operating system
      Default value is the item id of
      Ubuntu Linux 14.04 LTS Trusty Tahr - Minimal Install (64 bit)
    default: 4668

  # Application information

  webserver_port:
    description: The external web server port
    default: 8080

node_templates:

  mongod-host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      hostname: mongod

  nodejs-host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      hostname: nodejs

###########################################################
# This outputs section exposes the application endpoint.
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodejs-host, public_ip ] }
      port: { get_property: [ nodecellar, port ] }
